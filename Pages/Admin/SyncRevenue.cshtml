@page
@model SyncRevenueModel
@{
	ViewData["Title"] = "SyncRevenue";
}
<link rel="stylesheet" href="~/css/sync-revenue.css" asp-append-version="true" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js"></script>

<div class="main__information">	
	<div class="main__information-detail">
		<div class="main__table-form d-flex align-items-center">
			<div class="select__form col-4 ">
				<div class="form-group d-flex align-items-center">
					<label class="control-label"> Thống kê: </label>
					<div class="form__comboBox">
						<form method="post">
							<select name="combobox_Item">
								<option value="day" selected> Theo ngày</option>
								<option value="month"> Theo tháng</option>
								<option value="year"> Theo năm</option>
							</select>
						</form>
					</div>
				</div>
			</div>
			<div class="form__end col-4 d-flex align-items-center datetime">
				<div class="form-group d-flex align-items-center">
					<label class="control-label"> Từ: </label>
					<form>
						<input name="fromDate">
					</form>
				</div>
				<div class="form-group2 d-flex align-items-center">
					<label class="control-label"> Đến: </label>
					<form>
						<input name="toDate">
					</form>
				</div>
			</div>
		</div>
		<div class="infor__details d-flex">
			<div class="column__info-details col-8">
				<div class="column__info-total d-flex">
					<div class="column__total-offer text-center col-3">
						<p class="order__amount"> Số lượng đơn bán</p>
						<p class="total__money-amount" id="orderAmount"> 50</p>
					</div>
					<div class="column__total-offer text-center col-3">
						<p class="order__amount"> Số lượng đơn nhập</p>
						<p class="total__money-amount" id="importAmount"> 50</p>
					</div>
					<div class="column__total-profit col-5">
						<p class="total__amount"> Tổng lợi nhuận</p>
						<p class="total__money-amount" id="profitAmount"> 100.000.000đ</p>
					</div>
				</div>
				<div class="columns__chart">
					<p class="total__amount-revenue"> Tổng doanh thu</p>
					<p class="total__money-revenue" id="revenueAmount"> 400.000.000đ</p>
					<canvas id="myChart"> </canvas>
				</div>
			</div>
			<div class="best__seller-info col-4">
				<p class="title"> Bán chạy nhất</p>
				<p> Cánh gà chiên nước mắm</p>
				<p> Sườn nướng mật ong</p>
				<p> Cơm chiên dương châu</p>
				<p> Others</p>
			</div>
		</div>
	</div>
</div>
@*<script src="~/js/sync-revenue.js"></script>*@
<script>
	var selectBox = document.querySelector('select[name="combobox_Item"]');
	var fromDate = document.querySelector('input[name="fromDate"]');
	var toDate = document.querySelector('input[name="toDate"]');
	//var orderAmount = document.getElementById('orderAmount');
	//var importAmount = document.getElementById('importAmount');
	//var profitAmount = document.getElementById('profitAmount');
	//var revenueAmount = document.getElementById('revenueAmount');
	//var myChart = null;

	//function updateChartDay() {
	//	let fromDateVal = fromDate.value;
	//	let toDateVal = toDate.value;
	//	if (!fromDateVal && !toDateVal) {
	//		fromDateVal = '2023/05/01';
	//		toDateVal = '2023/05/31';
	//	}
	//	var FundDay = [];
	//	var RevenueDay = [];		
	//	 {
	//		var fromDateVal = fromDate.value;

	//	};
	//	foreach (var item in Model.List_Revenue)
	//	{
	//		string date1 = item.DateReve.ToString("yyyy/mm/dd");
	//		{ string date2 = fromDateVal; }

	//	}
	//}

	function updateFormFields() {
		if (selectBox.value === 'day') {
			fromDate.type = 'date';
			toDate.type = 'date';
			//updateChartDay();
		} else if (selectBox.value === 'month') {
			fromDate.type = 'month';
			toDate.type = 'month';
			//updateChartMonth();
		} else if (selectBox.value === 'year') {
			fromDate.type = 'number';
			toDate.type = 'number';
			//updateChartYear();
		}
	}

	updateFormFields();

	selectBox.addEventListener('change', updateFormFields);

	var ctx = document.getElementById('myChart').getContext('2d');

	var data = {
		labels: ['January', 'February', 'March', 'April', 'May'],
		datasets: [
			{
				label: 'Profit',				
				borderColor: 'rgba(255, 99, 132, 1)',
				fill: false,			
				data: [50, 60, 40, 40, 80],
				tension: 0.1

			},
			{
				label: 'Funds',				
				data: [20, 40, 30, 20, 50],
				fill: false,
				tension: 0.1,
				borderColor: 'rgba(75, 192, 192, 1)'				
			}
		]
	};

	/* Define the options for the chart */
	var options = {
		scales: {
			yAxes: [{
				ticks: {
					beginAtZero: true
				}
			}]
		},
	};

	/* Create the chart */
	var myChart = new Chart(ctx, {
		type: 'line',
		data: data,
		options: options
	});
</script>
