@page
@model PaymenteModel
@{
	ViewData["Title"] = "Payment";
}

<div class="breadcrumb-division">
	<ol class="breadcrumb breadcrumb__edit">
		<li class="breadcrumb-item"><a asp-page="/Index">Trang chủ</a></li>
		<li class="breadcrumb-item active" aria-current="page">Thanh toán</li>
	</ol>
</div>

<form class="row container payment jtf-center pr-0 pl-0" method="Post" asp-page-handler="Calculate">
	<div class="col-8 body__payment">
		<div class="receiver">
			<p>Địa chỉ giao hàng</p>
			<div class="list-receiver-item">
				<div class="receiver-item">
					<label>Tên người nhận <span style="color: red">&lowast;</span></label><br>
					<input class="receiver-item-input" type="text" name="Name" required id="receiverName">				
				</div>
			</div>
			<div class="list-receiver-item justify-content-between">
				<div class="receiver-item">
					<label>Số điện thoại <span style="color: red">&lowast;</span></label>
					<div id="phone_error" class="error hidden">* Vui lòng nhập đúng số điện thoại</div>
					<input class="receiver-item-input" type="text" id="phone_number" required name="PhoneNumber">
				</div>
			</div>
			<div class="row list-receiver-item d-flex">
				<div class="receiver-item col" style="padding-right: 5px">
					<label>Tỉnh (Thành phố) <span style="color: red">&lowast;</span></label><br>
					<select class="receiver-item-input">
						<option value="Đà Nẵng" selected>Đà Nẵng</option>
					</select>
				</div>
				<div class="receiver-item col" style="padding-left: 5px">
					<label>Quận (Huyện) <span style="color: red">&lowast;</span></label><br>
					<select class="receiver-item-input" name="combobox_Item_District" required="required" id="district">
						@foreach (var i in Model.List_Districts)
						{
							<option value="@i.DistrictName" data-id_district="@i.DistrictID">@i.DistrictName</option>
						}
					</select>
				</div>
			</div>
			<input type="hidden" name="fromDistrictId" value="1530" />
			<input type="hidden" name="serviceId" value="53320" />
			<input type="hidden" name="toDistrictId" />
			<input type="hidden" name="toWardCode" />
			<input type="hidden" name="height" value="15" />
			<input type="hidden" name="length" value="15" />
			<input type="hidden" name="weight" value="1000" />
			<input type="hidden" name="width" value="15" />
			<input type="hidden" name="insuranceValue" value="500000" />
			<div class="row list-receiver-item d-flex">
				<div class="receiver-item col" style="padding-right: 5px">
					<label>Phường (Xã) <span style="color: red">&lowast;</span></label><br>
					<select class="receiver-item-input" name="WardId" required="required" id="ward" onchange="calculateShippingFee(event)">
						@foreach (var i in Model.List_Wards)
						{
							<option value="@i.WardId" data-district="@i.DistrictID" >@i.WardName</option>
						}
					</select>
				</div>
				<div class="receiver-item col" style="padding-left: 5px">
					<label>Số nhà <span style="color: red">&lowast;</span></label><br>
					<input class="receiver-item-input" type="text" name="HouseNumber" required>
				</div>
			</div>
			<div class="list-receiver-item">
				<div class="receiver-item note-edit">
					<label>Ghi chú</label><br>
					<input class="receiver-item-input" type="text" name="Note">
				</div>
			</div>

			<button class="home-link home-link__payment" onclick="window.location.href = 'https://localhost:44344/User/Food/Menu';" type="button">
				<i class="fa-solid fa-chevron-left"></i>
				Trở về mua sắm
			</button>
		</div>
	</div>

	<div class="d-flex payment__book">
		<div class="list-payment">
			<div class="list-payment-item">
				@foreach (var i in Model.Carts)
				{
					<div class="payment-item">
						<div class="payment-item-infor">
							<img src="@i.FoodPic" alt="Ảnh món ăn">
							<div class="payment-item-detail">
								<p>@i.Name</p>
								<div>
									<span>@i.Price.ToString("N0")đ</span>
									<span style="opacity: 0.6;">x@(i.Quantity)</span>
								</div>
							</div>
						</div>
					</div>
				}
			</div>
				<div class="list-fee-detail">
					<div class="fee-detail__item fee-detail-item__payment">
						<span>Tạm tính</span><span>@Model.tempMoney.ToString("N0")đ</span>
					</div>
					<div class="fee-detail__item fee-detail-item__payment">
					<span>Phí vận chuyển</span><span id="ship">@Model.shippingMoney.ToString("N0")đ</span>
					</div>
					<div class="fee-detail__item fee-detail-item__payment">
						<span>Thuế (3%)</span><span>@((Model.tempMoney * 3/100).ToString("N0"))đ</span>
					</div>
				</div>
				<div class="fee-detail__item total-fee fee-detail-item__payment" style="font-weight: 500;">
					<span>Tổng thanh toán</span><span id="total" value="@(Model.tempMoney + Model.shippingMoney + Model.tempMoney * 3 / 100)">@((Model.tempMoney + Model.shippingMoney + Model.tempMoney * 3 / 100).ToString("N0"))đ</span>
				</div>
			<input type="hidden" value="@Model.tempMoney" asp-for="tempMoney" />
			<input type="hidden" value="@Model.shippingMoney" asp-for="shippingMoney" />
			<input type="hidden" id="totalhidden" name="totalhidden" value="@(Model.tempMoney + Model.shippingMoney + Model.tempMoney * 3 / 100)" asp-for="totalMoney" />
			<div id="successMessage" style="display:none">@ViewData["SuccessMessage"]</div>
			<div id="errorMessage" style="display:none">@ViewData["ErrorMessage"]</div>
			<button type="submit" class="submit-btn submit-btn__payment">
				Đặt Hàng
				<i class="fa-solid fa-shopping-cart" style="margin-left: 10px; vertical-align: middle;"></i>
			</button>
		</div>
	</div>
</form>
<script src="~/js/payment.js"></script>
@section Scripts {
	<script>
		let timeoutId;
		function debounce(func, delay) {
			clearTimeout(timeoutId);
			timeoutId = setTimeout(func, delay);
		}
		async function calculateShippingFee(event) {
			debounce(() => calculateShippingFee(event), 500);
			const response = await fetch(`https://online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee?from_district_id=${document.getElementsByName("fromDistrictId")[0].value}&service_id=${document.getElementsByName("serviceId")[0].value}&to_district_id=${document.getElementsByName("toDistrictId")[0].value}&to_ward_code=${document.getElementsByName("toWardCode")[0].value}&height=${document.getElementsByName("height")[0].value}&length=${document.getElementsByName("length")[0].value}&weight=${document.getElementsByName("weight")[0].value}&width=${document.getElementsByName("width")[0].value}&insurance_value=${document.getElementsByName("insuranceValue")[0].value}`, {
				method: "GET",
				headers: {
					"Content-Type": "application/json",
					"token": "312f0089-ed7a-11ed-8a8c-6e4795e6d902"
				}
			});
			const data = await response.json();
			const ship = document.getElementById("ship");
			const total = document.getElementById("total");
			const totalData = document.getElementById("totalhidden");
			if (response.ok) {
				ship.innerText = data.data.total.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
				total.innerText = (parseInt(total.getAttribute("value")) + data.data.total).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
				totalData.value = total.innerText;
				const successMessage = document.getElementById("successMessage");
				successMessage.innerText = `Success! Response status code: ${response.status}`;
			} else {
				const errorMessage = document.getElementById("errorMessage");
				errorMessage.innerText = `Error! ${data.message}`;
			}
		}
		calculateShippingFee(event);
	</script>
	<script>
		const districtDropdown = document.getElementById("district");
		const toDistrictInput = document.querySelector("input[name=toDistrictId]");
		let districtName = "";

		async function getDistrictId() {
			// Lấy DistrictName được chọn
			districtName = districtDropdown.value;
			const response = await fetch(`https://online-gateway.ghn.vn/shiip/public-api/master-data/district?province_id=203`, {
				method: "GET",
				headers: {
					"Content-Type": "application/json",
					"token": "312f0089-ed7a-11ed-8a8c-6e4795e6d902"
				}
			});
			const data = await response.json();

			if (response.ok) {
				// Tìm kiếm DistrictID tương ứng với DistrictName được chọn
				for (var i = 0; i < data.data.length; i++) {
					if (data.data[i].DistrictName.includes(districtName)) {
						toDistrictInput.value = data.data[i].DistrictID;
						return; // Thoát khỏi hàm nếu đã tìm thấy
					}
				}
				// Nếu không tìm thấy thì gán giá trị đầu tiên
				if (data.data.length > 0) {
					toDistrictInput.value = data.data[0].DistrictID;
				}
			} else {
				const errorMessage = document.getElementById("errorMessage");
				errorMessage.innerText = `Error! ${data.message}`;
			}
		}

		// Gọi hàm khi trang được tải lần đầu
		getDistrictId();

		// Thêm sự kiện onchange cho dropdown
		districtDropdown.addEventListener("change", getDistrictId);
	</script>
	<script>
		const wardDropdown = document.getElementById("ward");
		const toWardInput = document.querySelector("input[name=toWardCode]");
		let wardName = "";
		// Get the selected ward name
		
		async function getDefaultCode() {
			// Get the selected ward name
			const selectedOption = wardDropdown.options[wardDropdown.selectedIndex];

			try {
				// Fetch the ward data using the district ID
				const response = await fetch(
					`https://online-gateway.ghn.vn/shiip/public-api/master-data/ward?district_id=1526`,
					{
						method: "GET",
						headers: {
							"Content-Type": "application/json",
							token: "312f0089-ed7a-11ed-8a8c-6e4795e6d902",
						},
					}
				);

				const data = await response.json();

				if (response.ok) {
					// Search for the ward code corresponding to the selected ward name
					toWardInput.value = data.data[10].WardCode;
				} else {
					const errorMessage = document.getElementById("errorMessage");
					errorMessage.innerText = `Error! ${data.message}`;
				}
			} catch (error) {
				const errorMessage = document.getElementById("errorMessage");
				errorMessage.innerText = `Error! ${error.message}`;
			}
		}

		async function getWardCode() {
			try {
				const selectedOption = wardDropdown.options[wardDropdown.selectedIndex];
				wardName = selectedOption.textContent;
				// Fetch the ward data using the district ID
				const response = await fetch(
					`https://online-gateway.ghn.vn/shiip/public-api/master-data/ward?district_id=${document.getElementsByName("toDistrictId")[0].value}`,
					{
						method: "GET",
						headers: {
							"Content-Type": "application/json",
							token: "312f0089-ed7a-11ed-8a8c-6e4795e6d902",
						},
					}
				);

				const data = await response.json();

				if (response.ok) {
					// Search for the ward code corresponding to the selected ward name
					for (let i = 0; i < data.data.length; i++) {
						if (data.data[i].WardName.includes(wardName)) {
							toWardInput.value = data.data[i].WardCode;
							return;
						}
					}
				} else {
					const errorMessage = document.getElementById("errorMessage");
					errorMessage.innerText = `Error! ${data.message}`;
				}
			} catch (error) {
				const errorMessage = document.getElementById("errorMessage");
				errorMessage.innerText = `Error! ${error.message}`;
			}
		}

		// Call the function once on page load
		getDefaultCode();

		// Add an onchange event listener to the ward dropdown
		wardDropdown.addEventListener("change", getWardCode);
	</script>
}

<script>
	function captureReceiverName() {
		var receiverName = document.getElementById("receiverName").value;
		return receiverName;
	}
</script>

